The ``2-matrix_divided`` module
==============================

Using ``matrix_divided``
------------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a matrix by 2:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

Dividing a matrix by 1.5:
    >>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
    >>> div = 1.5
    >>> matrix_divided(matrix, div)
    [[1.0, 1.67, 2.33], [3.0, 3.67, 4.33]]

Dividing a matrix with uneven row sizes:
    >>> matrix = [[1, 2], [3, 4, 5], [6, 7, 8, 9]]
    >>> div = 3
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Dividing a matrix with non-integer/float elements:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 'nine']]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix with div as a string:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> div = 'zero'
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Dividing a matrix by 0:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> div = 0
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Dividing a matrix by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing a matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Dividing a matrix by a float number:
    >>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
    [[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]

Passing an empty matrix:
    >>> matrix_divided([], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

... (more test cases)

Passing div as a list:
    >>> matrix_divided([[5.7, 8.1], [7.7, 4.9]], [2])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Passing div as a string:
    >>> matrix_divided([[10, 50], [30, 20]], "10")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

... (more test cases)

Dividing a matrix which has positive and negative integer/float numbers:
    >>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
    [[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]
